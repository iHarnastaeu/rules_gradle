load(
    "@rules_kotlin//kotlin:jvm.bzl",
    java_binary = "kt_jvm_binary",
    java_library = "kt_jvm_library",
)
load(
    "@rules_java//java:defs.bzl",
    "java_plugin",
    pure_java_library = "java_library",
)
load(
    "@rules_graalvm//graalvm:defs.bzl",
    "native_image",
)
load(
    "//tools/defs/java:deps.bzl",
    "maven",
)

DEPS = [
    maven("ch.qos.logback:logback-core"),
    maven("ch.qos.logback:logback-classic"),
    maven("com.google.guava:guava"),
    maven("info.picocli:picocli"),
    maven("org.gradle:gradle-tooling-api"),
    maven("org.slf4j:slf4j-api"),
    maven("org.slf4j:jul-to-slf4j"),
    maven("org.jetbrains.kotlin:kotlin-stdlib"),
]

filegroup(
    name = "srcs",
    srcs = glob([
        "build/bazel/**/*.java",
        "build/bazel/**/*.kt",
    ]),
)

java_plugin(
    name = "picocli-processor",
    generates_api = True,
    processor_class = "picocli.codegen.aot.graalvm.processor.NativeImageConfigGeneratorProcessor",
    deps = [maven("info.picocli:picocli-codegen")],
)

pure_java_library(
    name = "picocli",
    exported_plugins = [":picocli-processor"],
    runtime_deps = [maven("info.picocli:picocli")],
)

java_library(
    name = "lib",
    srcs = [":srcs"],
    deps = DEPS + [
        ":picocli",
    ],
)

java_binary(
    name = "runner",
    main_class = "build.bazel.gradle.GradleRunner",
    visibility = ["//visibility:public"],
    runtime_deps = [":lib"],
)

java_binary(
    name = "wrapper",
    main_class = "build.bazel.gradle.GradleW",
    resources = [":logback.xml"],
    visibility = ["//visibility:public"],
    runtime_deps = [":lib"] + DEPS,
)

native_image(
    name = "native",
    main_class = "build.bazel.gradle.GradleRunner",
    visibility = ["//visibility:public"],
    deps = [":lib"],
)

alias(
    name = "java",
    actual = "runner",
    visibility = ["//visibility:public"],
)
